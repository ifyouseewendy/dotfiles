

# Format
#
#   <type>(<scope>): <subject>
#   <BLANK LINE>
#   <body>
#   <BLANK LINE>
#   <footer>
#
# Type
#
#   - feat: A new feature
#   - fix: A bug fix
#   - docs: Documentation only changes
#   - style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)
#   - refactor: A code change that neither fixes a bug nor adds a feature
#   - perf: A code change that improves performance
#   - test: Adding missing or correcting existing tests
#   - chore: Changes to the build process or auxiliary tools and libraries such as documentation generation
#
# Subject
#
#   - use the imperative, present tense: "change" not "changed" nor "changes"
#   - don't capitalize first letter
#   - no dot (.) at the end
#
# Body
#
#   Just as in the subject, use the imperative, present tense: "change" not "changed" nor "changes".
#   The body should include the motivation for the change and contrast this with previous behavior.
#
# Footer
#
#   The footer should contain any information about Breaking Changes and is also the place to
#   reference GitHub issues that this commit closes.
#
#   Breaking Changes should start with the word BREAKING CHANGE: with a space or two newlines.
#   The rest of the commit message is then used for this.
#
# Refer to:
#
#   - https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines
#   - https://conventionalcommits.org/
